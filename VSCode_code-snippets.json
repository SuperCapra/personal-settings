{
	"creator": {
		"prefix": "creator",
		"body": "$BLOCK_COMMENT_START \n\tcreated by gmaggi@deloitte.it \n\ton $CURRENT_DAY_NAME, $CURRENT_YEAR-$CURRENT_MONTH_NAME-$CURRENT_DATE \n$BLOCK_COMMENT_END"
	},
	"Zcreator": {
		"prefix": "Zcreator",
		"body": "$BLOCK_COMMENT_START*\n * @description       : ...\n * @author            : gmaggi@deloitte.it (Giovanni Maggi)\n * @last modified on   : $CURRENT_DAY_NAME, $CURRENT_DATE-$CURRENT_MONTH-$CURRENT_YEAR\n * @last modified by   : gmaggi@deloitte.it (Giovanni Maggi)\n * Modifications Log\n * Ver\tDate\t\tAuthor\t\t\tModification\n * 1.0\t$CURRENT_DATE-$CURRENT_MONTH-$CURRENT_YEAR\tGiovanni Maggi\tInitial Version\n*$BLOCK_COMMENT_END"
	},
	"Zupdate": {
		"prefix": "Zupdate",
		"body": " * *.*\t$CURRENT_DATE-$CURRENT_MONTH-$CURRENT_YEAR\tGiovanni Maggi\tUpdate ..."
	},
	"update": {
		"scope": "javascript,html,apex",
		"prefix": "update",
		"body": "updated by $MOD \n on $CURRENT_DAY_NAME, $CURRENT_YEAR-$CURRENT_MONTH_NAME-$CURRENT_DATE"
	},
	"test": {
		"scope": "apex",
		"prefix": "test",
		"body": "@IsTest\npublic with sharing class ${TM_FILENAME/(.*)\\..+$/$1/} {\n\t@TestSetup\n\tpublic static void testSetup(){\n\t\t$1\n\t}\n\n\t@IsTest\n\tpublic static void TESTMETHODNAME(){\n\t\t\n\t}\n}"
	},
	"soql": {
		"scope": "apex",
		"prefix": "soql",
		"body": "[SELECT Id, Name, $1 FROM $2];"
	},
	"forApex": {
		"scope": "apex",
		"prefix": "for",
		"body": "for($1 $2 : $3) {\n\t$4\n}"
	},
	"try": {
		"scope": "apex",
		"prefix": "try",
		"body": "try {\n\t$1\n} catch (Exception ex) {\n\tUtils.debugHandler(ex);\n}"
	},
	"then": {
		"scope": "javascript",
		"prefix": "then",
		"body": ".then(res => {\n\tlet resultParsed = JSON.parse(JSON.stringify(res))\n\tif(resultParsed.success) {\n\t\tconsole.log('success!')\n\t} else {\n\t\tconsole.log('error!')\n\t}\n}).catch(e => {\n\tconsole.log('Fatal Error!', e)\n})"
	},
	"parsing": {
		"scope": "javascript",
		"prefix": "parsing",
		"body": "JSON.parse(JSON.stringify($1))"
	},
	"ZhandlerComplete": {
		"scope": "apex",
		"prefix": "ZhandlerComplete",
		"body": "public without sharing class ${TM_FILENAME/(.*)\\..+$/$1/} extends TRG_Base {\n\n\tpublic override void onBeforeInsert() {\n\t\tLOG.debug('Start ${TM_FILENAME/(.*)\\..+$/$1/}.onBeforeInsert()');\n\t\tLOG.debug('End ${TM_FILENAME/(.*)\\..+$/$1/}.onBeforeInsert()');\n\t}\n\n\tpublic override void onAfterInsert() {\n\t\tLOG.debug('Start ${TM_FILENAME/(.*)\\..+$/$1/}.onAfterInsert()');\n\t\tLOG.debug('End ${TM_FILENAME/(.*)\\..+$/$1/}.onAfterInsert()');\n\t}\n\n\tpublic override void onBeforeUpdate() {\n\t\tLOG.debug('Start ${TM_FILENAME/(.*)\\..+$/$1/}.onBeforeUpdate()');\n\t\tLOG.debug('End ${TM_FILENAME/(.*)\\..+$/$1/}.onBeforeUpdate()');\n\t}\n\n\tpublic override void onAfterUpdate() {\n\t\tLOG.debug('Start ${TM_FILENAME/(.*)\\..+$/$1/}.onAfterUpdate()');\n\t\tLOG.debug('End ${TM_FILENAME/(.*)\\..+$/$1/}.onAfterUpdate()');\n\t}\n}"
	},
	"Zhandler": {
		"scope": "apex",
		"prefix": "Zhandler",
		"body": "public without sharing class ${TM_FILENAME/(.*)\\..+$/$1/} extends TRG_Base {}"
	},
	"ZbeforeInsert": {
		"scope": "apex",
		"prefix": "ZbeforeInsert",
		"body": "public override void onBeforeInsert() {\n\tLOG.debug('Start ${TM_FILENAME/(.*)\\..+$/$1/}.onBeforeInsert()');\n\tLOG.debug('End ${TM_FILENAME/(.*)\\..+$/$1/}.onBeforeInsert()');\n}"
	},
	"ZafterInsert": {
		"scope": "apex",
		"prefix": "ZafterInsert",
		"body": "public override void onAfterInsert() {\n\tLOG.debug('Start ${TM_FILENAME/(.*)\\..+$/$1/}.onAfterInsert()');\n\tLOG.debug('End ${TM_FILENAME/(.*)\\..+$/$1/}.onAfterInsert()');\n}"
	},
	"ZbeforeUpdate": {
		"scope": "apex",
		"prefix": "ZbeforeUpdate",
		"body": "public override void onBeforeUpdate() {\n\tLOG.debug('Start ${TM_FILENAME/(.*)\\..+$/$1/}.onBeforeUpdate()');\n\tLOG.debug('End ${TM_FILENAME/(.*)\\..+$/$1/}.onBeforeUpdate()');\n}"
	},
	"ZafterUpdate": {
		"scope": "apex",
		"prefix": "ZafterUpdate",
		"body": "public override void onAfterUpdate() {\n\tLOG.debug('Start ${TM_FILENAME/(.*)\\..+$/$1/}.onAfterUpdate()');\n\tLOG.debug('End ${TM_FILENAME/(.*)\\..+$/$1/}.onAfterUpdate()');\n}"
	},
	"Zdescriptor": {
		"scope": "apex",
		"prefix": "Zdescriptor",
		"body": "$BLOCK_COMMENT_START*\n * @description ...\n * @author gmaggi@deloitte.it (Giovanni Maggi) | on $CURRENT_DAY_NAME, $CURRENT_DATE-$CURRENT_MONTH-$CURRENT_YEAR\n * @param ...\n*$BLOCK_COMMENT_END"
	},
	"Ztrigger": {
		"scope": "apex",
		"prefix": "Ztrigger",
		"body": "TRG_Handler handler = new TRG_Handler(${TM_FILENAME/(.*)\\..+$/$1/}Handler.class);\nhandler.handleTrigger();"
	}
}